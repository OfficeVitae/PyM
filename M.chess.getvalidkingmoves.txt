; getValidKingMoves() returns the valid moves the king at #krow,#kcol can make
; third and fourth parameter #kcanshortcastle and #kcanlongcastle tell if the king can short or long castle respectively
;;out("Executing getValidKingMoves(row=",krow,",col=",kcol,",shortcastle=",kcanshortcastle,",longcastle=",kcanlongcastle,")...",lf)
$=l()
ksign=sign(board(krow,kcol))
; 1. all straight moves
if(and(krow>1,sign(board(krow-1,kcol))!=ksign),(kme=getMoveEffect(krow,kcol,krow-1,kcol,0),if(kme>=0,$.=l(l(krow-1,kcol,1,kme)))))
if(and(krow<8,sign(board(krow+1,kcol))!=ksign),(kme=getMoveEffect(krow,kcol,krow+1,kcol,0),if(kme>=0,$.=l(l(krow+1,kcol,1,kme)))))
if(and(kcol>1,sign(board(krow,kcol-1))!=ksign),(kme=getMoveEffect(krow,kcol,krow,kcol-1,0),if(kme>=0,$.=l(l(krow,kcol-1,1,kme)))))
if(and(kcol<8,sign(board(krow,kcol+1))!=ksign),(kme=getMoveEffect(krow,kcol,krow,kcol+1,0),if(kme>=0,$.=l(l(krow,kcol+1,1,kme)))))
; 2. all diagonal moves
if(and(krow>1,kcol>1,sign(board(krow-1,kcol-1))!=ksign),(kme=getMoveEffect(krow,kcol,krow-1,kcol-1,0),if(kme>=0,$.=l(l(krow-1,kcol-1,1,kme)))))
if(and(krow>1,kcol<8,sign(board(krow-1,kcol+1))!=ksign),(kme=getMoveEffect(krow,kcol,krow-1,kcol+1,0),if(kme>=0,$.=l(l(krow-1,kcol+1,1,kme)))))
if(and(krow<8,kcol<8,sign(board(krow+1,kcol+1))!=ksign),(kme=getMoveEffect(krow,kcol,krow+1,kcol+1,0),if(kme>=0,$.=l(l(krow+1,kcol+1,1,kme)))))
if(and(krow<8,kcol>1,sign(board(krow+1,kcol-1))!=ksign),(kme=getMoveEffect(krow,kcol,krow+1,kcol-1,0),if(kme>=0,$.=l(l(krow+1,kcol-1,1,kme)))))
; 3. castling moves
if(kcanshortcastle,(kme=getMoveEffect(krow,kcol,krow,kcol+2,2),if(kme>=0,$.=l(l(krow,7,2,kme)))))
if(kcanlongcastle,(kme=getMoveEffect(krow,kcol,krow,kcol-2,3),if(kme>=0,$.=l(l(krow,3,3,kme)))))
