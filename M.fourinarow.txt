; player1 plays against player2 dropping disc in a 7-by-6 board
; game setup
debugnow=debug ; remember the current debug level
debug=0 ; do not allow debug information to show while playing
if(player1==player2,error("The player names should be different!"))
out("Arguments: player 1=",player1," - player 2=",player2," - rows=",rows," - columns=",cols,".",lf)
out("The first character in the player names that differs is used in displaying the board.",lf)
if(cols==7&&rows==6,out("You can change the number of rows and/or columns by adding them as third and/or fourth argument.",lf))
board=replicate(replicate(0,cols),rows) ; initialize the rows x cols board
playerindex=1 ; the current player index (1 or 2)
maxmovecount=rows*cols ; the maximum number of moves
movecount=0 ; the number of moves
$=0 ; the player who won
; determine the first different character in the player names
(c=1,l1=len(player1),l2=len(player2))
while(c<=l1&&c<=l2&&player1(c)==player2(c),c+=1)
c1=if(c<=l1,player1(c),player1(l1))
c2=if(c<=l2,player2(c),player2(l2))
symbols=(c1,c2) ; the symbols to use in the board, assuming the player names do not start with the same character
; determine columns that a disc can be dropped in
availablecolumns=''
for(c,1..cols,if(board(1,c)==0,availablecolumns+=c))
; get move from current player
out(if(playerindex==1,player1,player2)+', what column to drop the disc in [',availablecolumns,']? ')
col=int(inch(availablecolumns)) ; ask for column to drop disc in
if(col==?,(debug=debugnow,return(3-playerindex))) ; user gave up
out(lf)
movecount+=1 ; increment number of moves
row=1 ; find last available row to occupy
while(row<rows&&board(row+1,col)==0,row+=1)
board(row,col)=playerindex
out("Board after ",movecount," moves:",lf,' ')
for(c,1..cols,out('|',c)) ; header
out('|',lf,' +')
for(c,1..cols,out('-+'))
out(lf)
; board rows
; if the cell is empty, we'd like to show the column value light grey on white
for(r,1..rows,out(r),for(c,1..cols,out('|'),if(board(r,c)>0,out(symbols(board(r,c))),outc((7,?),c))),out('|',lf))
out(' +')
for(c,1..cols,out('-+'))
out(lf)
$=won() ; determine if the current player won
if($>0||movecount==maxmovecount,(debugnow=debug,return()))
playerindex=3-playerindex ; switch player
jump(-25)
